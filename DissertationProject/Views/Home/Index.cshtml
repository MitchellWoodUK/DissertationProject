@using Microsoft.AspNetCore.Identity
@inject UserManager<CustomUserModel> UserManager
@model IEnumerable<ChartViewModel>
@{
    ViewData["Title"] = "Home Page";

    CustomUserModel user = await UserManager.GetUserAsync(User);
    var role = await UserManager.GetRolesAsync(user);
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
        crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>



<!--Index page - Links to other pages.-->
<div class="container mt-5">
    <div class="row white-bg py-4 ps-2">
        <h1 class="subheading-text">Good Morning @user.Fname</h1>
        <h4 class="text">Here is your daily report...</h4>
    </div>

    @if (role.Count == 0)
    {
        <!--Warning block that appears if the user does not have a role.-->
        <div class="row bg-red py-4 p-4 mt-5 border border-danger border-5">
            <h3 class="subheading-text mb-3 text-center">You Are Not Assigned To A Family - Go To The Family Settings To Create Or Join A Family!</h3>
            <a asp-controller="Home" asp-action="Settings" class="btn btn-danger w-100">Family Settings</a>
        </div>
    }


    <div class=" d-flex justify-content-center mt-5">
        <div class="row text-center">

            <div class="col mb-3">
                <div class="card mx-5 homecards" style="width: 18rem;">
                    <div class="row">
                        <div class="col-6">
                            <img src="~/images/settings.gif" alt="settings" class="card-img p-3 d-flex justify-content-center">
                        </div>
                        <div class="col-6">
                            <h5 class="card-title mt-4">Configure Family Settings</h5>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text ">Connect your family accounts and manage your finances collaboratively with our family settings feature. Get started today!</p>
                    </div>
                    <div class="card-footer">
                        <a asp-controller="Home" asp-action="Settings" class="btn btn-col white-text w-100">Family Settings</a>
                    </div>
                </div>

            </div>

            <div class="col mb-3">
                <div class="card mx-5 homecards" style="width: 18rem;">
                    <div class="row">
                        <div class="col-6">
                            <img src="~/images/credit-card.gif" alt="transactions" class="card-img p-3 d-flex justify-content-center">
                        </div>
                        <div class="col-6">
                            <h5 class="card-title mt-4">Transaction Manager</h5>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text ">Effortlessly track and manage all transactions with our user-friendly transaction manager. Try it now!</p>
                    </div>
                    <div class="card-footer">
                        <a asp-controller="Transaction" asp-action="ViewAll" class="btn btn-col white-text w-100">Transaction Manager</a>
                    </div>
                </div>
            </div>

            <div class="col mb-3">
                <div class="card mx-5 homecards" style="width: 18rem;">
                    <div class="row">
                        <div class="col-6">
                            <img src="~/images/receipt.gif" alt="bills" class="card-img p-3 d-flex justify-content-center">
                        </div>
                        <div class="col-6">
                            <h5 class="card-title mt-4">Bill Manager</h5>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text ">Never miss a bill again with our handy bills manager. Stay on top of your finances today!</p>
                    </div>
                    <div class="card-footer">
                        <a asp-controller="Bills" asp-action="ViewAll" class="btn btn-col white-text w-100">Bill Manager</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
    @{
        bool hasElements = Model.Any();
        if (hasElements)
        {
            <div class="container my-5">
                <div class="row">
                    <div class="col white-bg m-2 p-3">

                        <div>
                            <h4 class="subheading-text">Money Remaining for the Month:</h4>
                            <h3 class="green-text heading-text">£@Math.Round(Model.Sum(m => m.Profit), 2)</h3>
                        </div>
                        <div class="mb-3">
                            <canvas id="moneyRemainingPieChart" width="300"></canvas>
                        </div>
                        <div class="d-flex align-self-end">
                            <a class="text-black subheading-text" asp-area="" asp-controller="Budget" asp-action="Manage">View Your Statement Screen</a>
                        </div>
                    </div>

                    <div class="col white-bg m-2 p-3">
                        <div class="mb-3">
                            <h4 class="subheading-text">Amount Spent on Transactions Over Time:</h4>
                            <h3 class="red-text heading-text">£@Math.Round(Model.Sum(m => m.Expenses), 2)</h3>
                        </div>
                        <div class="mb-3">
                            <canvas id="linegraph" width="300"></canvas>
                        </div>
                        <div>
                            <a class="text-black subheading-text" asp-area="" asp-controller="Transaction" asp-action="ViewAll">View Your Transactions Screen</a>
                        </div>
                    </div>
            
                </div>
            </div>
        
        }
    }
</div>


<!--Code for charts-->
<script>
    //Pie chart for money remaining
    var moneyRemainingPieChart = document.getElementById("moneyRemainingPieChart");
    // Extract expenses and profit data from the ChartViewModel
    var expenses = @Model.Sum(m => m.Expenses);
    var profit = @Model.Sum(m => m.Profit);

    var data = {
        labels: ["Spent", "Remaining"],
        datasets: [{
            data: [expenses, profit],
            backgroundColor: [
                '#ff4d4d',
                '#32cd32'
            ],
            borderColor: [
                '#ff4d4d',
                '#4dbb4d'
            ],
            borderWidth: 1
        }]
    };

    var options = {
        responsive: true,
        maintainAspectRatio: false,
        legend: {
            display: true,
            position: 'bottom'
        }
    };

    var moneyRemainingPieChart = new Chart(moneyRemainingPieChart, {
        type: 'pie',
        data: data,
        options: options
    });
    

    //line graph showing transactions over time

    var transactionsData = @Html.Raw(Json.Serialize(Model.SelectMany(m => m.Transactions).OrderBy(t => t.Date)));

    var transactionDates = transactionsData.map(function (data) { return data.date; });
    var transactionAmounts = transactionsData.map(function (data) { return data.amount; });

    var chartData = {
        labels: transactionDates,
        datasets: [
            {
                label: "Amount Spent",
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1,
                pointBackgroundColor: 'rgba(255, 99, 132, 1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(255, 99, 132, 1)',
                data: transactionAmounts
            }
        ]
    };

    var chartOptions = {
        scales: {
            xAxes: [{
                type: 'time',
                distribution: 'linear',
                time: {
                    unit: 'month',
                    displayFormats: {
                        month: 'MMM YYYY'
                    }
                }
            }],
            yAxes: [{
                ticks: {
                    beginAtZero: true,
                    callback: function (value, index, values) {
                        return '$' + value;
                    }
                }
            }]
        },
        legend: {
            display: true,
            position: 'bottom'
        },
        responsive: true
    };

    var ctx = document.getElementById('linegraph').getContext('2d');
    var lineChart = new Chart(ctx, {
        type: 'line',
        data: chartData,
        options: chartOptions
    });


</script>